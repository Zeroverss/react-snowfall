{"version":3,"file":"hooks.js","names":["_react","require","_reactFastCompare","_interopRequireDefault","_Snowflake","_config","_utils","obj","__esModule","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","key","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","iter","iterator","Array","from","isArray","_arrayLikeToArray","_slicedToArray","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","minLen","n","prototype","toString","slice","constructor","name","test","len","arr2","l","u","a","f","next","done","createSnowflakes","canvasRef","amount","config","current","snowflakes","Snowflake","useSnowflakes","exports","_useState","useState","_useState2","setSnowflakes","useEffect","sizeDifference","concat","map","snowflake","updateConfig","useComponentSize","ref","_useState3","getSize","_useState4","size","setSize","resizeHandler","useCallback","useLayoutEffect","_window","window","ResizeObserver","resizeObserver","observe","disconnect","addEventListener","removeEventListener","useSnowfallStyle","overrides","styles","useMemo","snowfallBaseStyle","useDeepCompareEffect","effect","deps","useRef","isEqual","useDeepMemo","_useState5","_useState6","state","setState"],"sources":["../src/hooks.ts"],"sourcesContent":["import { useCallback, useLayoutEffect, useEffect, useRef, useState, useMemo } from 'react'\r\nimport isEqual from 'react-fast-compare'\r\nimport Snowflake, { SnowflakeConfig } from './Snowflake'\r\nimport { snowfallBaseStyle } from './config'\r\nimport { getSize } from './utils'\r\n\r\n/**\r\n * A utility function to create a collection of snowflakes\r\n * @param canvasRef A ref to the canvas element\r\n * @param amount The number of snowflakes\r\n * @param config The configuration for each snowflake\r\n */\r\nconst createSnowflakes = (\r\n  canvasRef: React.RefObject<HTMLCanvasElement>,\r\n  amount: number,\r\n  config: SnowflakeConfig,\r\n): Snowflake[] => {\r\n  if (!canvasRef.current) return []\r\n\r\n  const snowflakes: Snowflake[] = []\r\n\r\n  for (let i = 0; i < amount; i++) {\r\n    snowflakes.push(new Snowflake(canvasRef.current, config))\r\n  }\r\n\r\n  return snowflakes\r\n}\r\n\r\n/**\r\n * A utility hook to manage creating and updating a collection of snowflakes\r\n * @param canvasRef A ref to the canvas element\r\n * @param amount The number of snowflakes\r\n * @param config The configuration for each snowflake\r\n */\r\nexport const useSnowflakes = (\r\n  canvasRef: React.RefObject<HTMLCanvasElement>,\r\n  amount: number,\r\n  config: SnowflakeConfig,\r\n) => {\r\n  const [snowflakes, setSnowflakes] = useState<Snowflake[]>([])\r\n\r\n  // Handle change of amount\r\n  useEffect(() => {\r\n    setSnowflakes((snowflakes) => {\r\n      const sizeDifference = amount - snowflakes.length\r\n\r\n      if (sizeDifference > 0) {\r\n        return [...snowflakes, ...createSnowflakes(canvasRef, sizeDifference, config)]\r\n      }\r\n\r\n      if (sizeDifference < 0) {\r\n        return snowflakes.slice(0, amount)\r\n      }\r\n\r\n      return snowflakes\r\n    })\r\n  }, [amount, canvasRef, config])\r\n\r\n  // Handle change of config\r\n  useEffect(() => {\r\n    setSnowflakes((snowflakes) =>\r\n      snowflakes.map((snowflake) => {\r\n        snowflake.updateConfig(config)\r\n        return snowflake\r\n      }),\r\n    )\r\n  }, [config])\r\n\r\n  return snowflakes\r\n}\r\n\r\n/**\r\n * Returns the height and width of a HTML element, uses the `ResizeObserver` api if available to detect changes to the\r\n * size. Falls back to listening for resize events on the window.\r\n * @param ref A ref to the HTML element to be measured\r\n */\r\nexport const useComponentSize = (ref: React.RefObject<HTMLElement>) => {\r\n  const [size, setSize] = useState(getSize(ref.current))\r\n\r\n  const resizeHandler = useCallback(() => {\r\n    if (ref.current) {\r\n      setSize(getSize(ref.current))\r\n    }\r\n  }, [ref])\r\n\r\n  useLayoutEffect(() => {\r\n    const { ResizeObserver } = window\r\n\r\n    if (!ref.current) return\r\n    resizeHandler()\r\n\r\n    if (typeof ResizeObserver === 'function') {\r\n      const resizeObserver = new ResizeObserver(resizeHandler)\r\n      resizeObserver.observe(ref.current)\r\n\r\n      return () => resizeObserver.disconnect()\r\n    } else {\r\n      window.addEventListener('resize', resizeHandler)\r\n\r\n      return () => window.removeEventListener('resize', resizeHandler)\r\n    }\r\n  }, [ref, resizeHandler])\r\n\r\n  return size\r\n}\r\n\r\n/**\r\n * Utility hook that merges any provided styles with the default styles\r\n * @param overrides The style prop passed into the component\r\n */\r\nexport const useSnowfallStyle = (overrides?: React.CSSProperties): React.CSSProperties => {\r\n  const styles = useMemo(\r\n    () => ({\r\n      ...snowfallBaseStyle,\r\n      ...(overrides || {}),\r\n    }),\r\n    [overrides],\r\n  )\r\n\r\n  return styles\r\n}\r\n\r\n/**\r\n * Same as `React.useEffect` but uses a deep comparison on the dependency array. This should only\r\n * be used when working with non-primitive dependencies.\r\n *\r\n * @param effect Effect callback to run\r\n * @param deps Effect dependencies\r\n */\r\nexport function useDeepCompareEffect(effect: React.EffectCallback, deps: React.DependencyList) {\r\n  const ref = useRef<React.DependencyList>(deps)\r\n\r\n  // Only update the current dependencies if they are not deep equal\r\n  if (!isEqual(deps, ref.current)) {\r\n    ref.current = deps\r\n  }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  return useEffect(effect, ref.current)\r\n}\r\n\r\n/**\r\n * Utility hook to stabilize a reference to a value, the returned value will always match the input value\r\n * but (unlike an inline object) will maintain [SameValueZero](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * equality until a change is made.\r\n *\r\n * @example\r\n *\r\n * const obj = useDeepMemo({ foo: 'bar', bar: 'baz' }) // <- inline object creation\r\n * const prevValue = usePrevious(obj) // <- value from the previous render\r\n * console.log(obj === prevValue) // <- always logs true until value changes\r\n */\r\nexport function useDeepMemo<T>(value: T): T {\r\n  const [state, setState] = useState(value)\r\n\r\n  useDeepCompareEffect(() => setState(value), [value])\r\n\r\n  return state\r\n}\r\n"],"mappings":"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"}