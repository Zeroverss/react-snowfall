{"version":3,"file":"Snowfall.js","names":["_react","_interopRequireWildcard","require","_config","_hooks","_Snowflake","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","Snowfall","_ref","arguments","length","undefined","_ref$color","color","defaultConfig","_ref$changeFrequency","changeFrequency","_ref$radius","radius","_ref$speed","speed","_ref$wind","wind","_ref$rotationSpeed","rotationSpeed","_ref$opacity","opacity","_ref$snowflakeCount","snowflakeCount","images","style","mergedStyle","useSnowfallStyle","canvasRef","useRef","canvasSize","useComponentSize","animationFrame","lastUpdate","Date","now","config","useDeepMemo","snowflakes","useSnowflakes","render","useCallback","framesPassed","canvas","current","forEach","snowflake","update","ctx","getContext","setTransform","clearRect","offsetWidth","offsetHeight","draw","loop","msPassed","targetFrameTime","requestAnimationFrame","useEffect","cancelAnimationFrame","createElement","ref","height","width","_default","exports"],"sources":["../src/Snowfall.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react'\r\nimport { targetFrameTime } from './config'\r\nimport { useComponentSize, useSnowfallStyle, useSnowflakes, useDeepMemo } from './hooks'\r\nimport { SnowflakeProps, defaultConfig } from './Snowflake'\r\n\r\nexport interface SnowfallProps extends Partial<SnowflakeProps> {\r\n  /**\r\n   * The number of snowflakes to be rendered.\r\n   *\r\n   * The default value is 150.\r\n   */\r\n  snowflakeCount?: number\r\n  /**\r\n   * Any style properties that will be passed to the canvas element.\r\n   */\r\n  style?: React.CSSProperties\r\n}\r\n\r\nconst Snowfall = ({\r\n  color = defaultConfig.color,\r\n  changeFrequency = defaultConfig.changeFrequency,\r\n  radius = defaultConfig.radius,\r\n  speed = defaultConfig.speed,\r\n  wind = defaultConfig.wind,\r\n  rotationSpeed = defaultConfig.rotationSpeed,\r\n  opacity = defaultConfig.opacity,\r\n  snowflakeCount = 150,\r\n  images,\r\n  style,\r\n}: SnowfallProps = {}): JSX.Element => {\r\n  const mergedStyle = useSnowfallStyle(style)\r\n\r\n  const canvasRef = useRef<HTMLCanvasElement>(null)\r\n  const canvasSize = useComponentSize(canvasRef)\r\n  const animationFrame = useRef(0)\r\n\r\n  const lastUpdate = useRef(Date.now())\r\n  const config = useDeepMemo<SnowflakeProps>({\r\n    color,\r\n    changeFrequency,\r\n    radius,\r\n    speed,\r\n    wind,\r\n    rotationSpeed,\r\n    images,\r\n    opacity,\r\n  })\r\n  const snowflakes = useSnowflakes(canvasRef, snowflakeCount, config)\r\n\r\n  const render = useCallback(\r\n    (framesPassed = 1) => {\r\n      const canvas = canvasRef.current\r\n      if (canvas) {\r\n        // Update the positions of the snowflakes\r\n        snowflakes.forEach((snowflake) => snowflake.update(canvas, framesPassed))\r\n\r\n        // Render them if the canvas is available\r\n        const ctx = canvas.getContext('2d')\r\n        if (ctx) {\r\n          ctx.setTransform(1, 0, 0, 1, 0, 0)\r\n          ctx.clearRect(0, 0, canvas.offsetWidth, canvas.offsetHeight)\r\n\r\n          snowflakes.forEach((snowflake) => snowflake.draw(ctx))\r\n        }\r\n      }\r\n    },\r\n    [snowflakes],\r\n  )\r\n\r\n  const loop = useCallback(() => {\r\n    // Update based on time passed so that a slow frame rate won't slow down the snowflake\r\n    const now = Date.now()\r\n    const msPassed = Date.now() - lastUpdate.current\r\n    lastUpdate.current = now\r\n\r\n    // Frames that would have passed if running at 60 fps\r\n    const framesPassed = msPassed / targetFrameTime\r\n\r\n    render(framesPassed)\r\n\r\n    animationFrame.current = requestAnimationFrame(loop)\r\n  }, [render])\r\n\r\n  useEffect(() => {\r\n    loop()\r\n    return () => cancelAnimationFrame(animationFrame.current)\r\n  }, [loop])\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      height={canvasSize.height}\r\n      width={canvasSize.width}\r\n      style={mergedStyle}\r\n      data-testid=\"SnowfallCanvas\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default Snowfall\r\n"],"mappings":"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"}